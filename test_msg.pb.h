// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_msg.proto

#ifndef PROTOBUF_test_5fmsg_2eproto__INCLUDED
#define PROTOBUF_test_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_test_5fmsg_2eproto();
void protobuf_AssignDesc_test_5fmsg_2eproto();
void protobuf_ShutdownFile_test_5fmsg_2eproto();

class Triplet;
class Duplet;

// ===================================================================

class Triplet : public ::google::protobuf::Message {
 public:
  Triplet();
  virtual ~Triplet();
  
  Triplet(const Triplet& from);
  
  inline Triplet& operator=(const Triplet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Triplet& default_instance();
  
  void Swap(Triplet* other);
  
  // implements Message ----------------------------------------------
  
  Triplet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Triplet& from);
  void MergeFrom(const Triplet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 a = 1;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 1;
  inline ::google::protobuf::int32 a() const;
  inline void set_a(::google::protobuf::int32 value);
  
  // required int32 b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline ::google::protobuf::int32 b() const;
  inline void set_b(::google::protobuf::int32 value);
  
  // required int32 c = 3;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 3;
  inline ::google::protobuf::int32 c() const;
  inline void set_c(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Triplet)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_c();
  inline void clear_has_c();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 c_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_5fmsg_2eproto();
  friend void protobuf_AssignDesc_test_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_test_5fmsg_2eproto();
  
  void InitAsDefaultInstance();
  static Triplet* default_instance_;
};
// -------------------------------------------------------------------

class Duplet : public ::google::protobuf::Message {
 public:
  Duplet();
  virtual ~Duplet();
  
  Duplet(const Duplet& from);
  
  inline Duplet& operator=(const Duplet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplet& default_instance();
  
  void Swap(Duplet* other);
  
  // implements Message ----------------------------------------------
  
  Duplet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplet& from);
  void MergeFrom(const Duplet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 a = 1;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 1;
  inline ::google::protobuf::int32 a() const;
  inline void set_a(::google::protobuf::int32 value);
  
  // required int32 b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline ::google::protobuf::int32 b() const;
  inline void set_b(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Duplet)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_5fmsg_2eproto();
  friend void protobuf_AssignDesc_test_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_test_5fmsg_2eproto();
  
  void InitAsDefaultInstance();
  static Duplet* default_instance_;
};
// ===================================================================


// ===================================================================

// Triplet

// required int32 a = 1;
inline bool Triplet::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Triplet::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Triplet::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Triplet::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 Triplet::a() const {
  return a_;
}
inline void Triplet::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
}

// required int32 b = 2;
inline bool Triplet::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Triplet::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Triplet::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Triplet::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 Triplet::b() const {
  return b_;
}
inline void Triplet::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
}

// required int32 c = 3;
inline bool Triplet::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Triplet::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Triplet::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Triplet::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline ::google::protobuf::int32 Triplet::c() const {
  return c_;
}
inline void Triplet::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
}

// -------------------------------------------------------------------

// Duplet

// required int32 a = 1;
inline bool Duplet::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplet::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplet::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplet::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 Duplet::a() const {
  return a_;
}
inline void Duplet::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
}

// required int32 b = 2;
inline bool Duplet::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplet::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplet::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplet::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 Duplet::b() const {
  return b_;
}
inline void Duplet::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_5fmsg_2eproto__INCLUDED
